!function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=1)}([function(t,e,n){"use strict";var i=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.substract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t}();e.a=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),o=n(3),r=n(5),s=n(0),c=[new s.a(100,100),new s.a(200,100),new s.a(200,200),new s.a(100,200)],a=[new s.a(300,400),new s.a(450,300),new s.a(470,370)],u=[new s.a(0,20),new s.a(20,0),new s.a(40,10),new s.a(40,30),new s.a(30,40)],h=new i.a(c),f=new i.a(a),d=new i.a(u),y={width:window.innerWidth-.02*window.innerWidth,height:window.innerHeight-.02*window.innerWidth,padding:30,polygonMargin:20},l=new r.a,p=new o.a("example",y);window.addEventListener("load",function(){function t(){requestAnimationFrame(t),p.update()}p.init();var e=[h,f,d];p.addArr(e),p.element.addEventListener("mousedown",function(t){l.cursorDownPos.x=t.offsetX,l.cursorDownPos.y=t.offsetY,p.selectedObject=p.getSelectedObject(l.cursorDownPos)}),p.element.addEventListener("mouseup",function(t){l.cursorUpPos.x=t.offsetX,l.cursorUpPos.y=t.offsetY;var e=l.getOffset();p.selectedObject&&p.selectedObject.shift(e),p.selectedObject=null}),t()})},function(t,e,n){"use strict";var i=n(0),o=function(){function t(t){this.vertices=t,this.isOverlap=!1,this.setBoundingBox()}return t.prototype.shift=function(t){for(var e=0;e<this.vertices.length;e++)this.vertices[e]=this.vertices[e].add(t);this.setBoundingBox()},t.prototype.setBoundingBox=function(){var t=this.vertices[0].x,e=this.vertices[0].x,n=this.vertices[0].y,o=this.vertices[0].y;this.vertices.forEach(function(i){i.x<t&&(t=i.x),i.x>e&&(e=i.x),i.y<n&&(n=i.y),i.y>o&&(o=i.y)}),this.boundingBox=[new i.a(t,n),new i.a(e,n),new i.a(e,o),new i.a(t,o)]},t}();e.a=o},function(t,e,n){"use strict";n.d(e,"a",function(){return r});var i=n(4),o=n(0),r=function(){function t(t,e,n){this.id=t,this.setting=e,this.objects=n||[],this.nextObjListPos=new o.a(this.setting.padding,this.setting.padding),this.strokeColor="#000",this.fillColor="#f00",this.selectedObject=null,this.element=document.getElementById(t)}return t.prototype.init=function(){this.element.width=this.setting.width,this.element.height=this.setting.height},t.prototype.add=function(t){this.objects.push(t);var e=this.nextObjListPos.substract(t.boundingBox[0]);t.shift(e),this.nextObjListPos.y=t.boundingBox[t.boundingBox.length-1].y+this.setting.polygonMargin,this.update()},t.prototype.addArr=function(t){var e=this;t.forEach(function(t){e.add(t)})},t.prototype.draw=function(t){var e=this.element.getContext("2d");e.save(),e.fillStyle=this.fillColor,e.strokeStyle=this.strokeColor,e.beginPath(),e.moveTo(t.vertices[0].x,t.vertices[0].y),t.vertices.forEach(function(t){e.lineTo(t.x,t.y)}),e.closePath(),e.stroke(),t.isOverlap&&e.fill(),e.restore()},t.prototype.update=function(){var t=this;this.element.getContext("2d").clearRect(0,0,this.setting.width,this.setting.height),this.updateOverlappedObject(this.objects),this.objects.forEach(function(e){t.draw(e)})},t.prototype.getSelectedObject=function(t){return this.objects.find(function(e){return i.a.isPointInPoly(t,e.vertices)})||null},t.prototype.checkVertexInPoly=function(t,e){return t.vertices.some(function(t){return i.a.isPointInPoly(t,e.vertices)}),e.vertices.some(function(e){return i.a.isPointInPoly(e,t.vertices)})},t.prototype.checkSideIntersection=function(t,e){for(var n=t.vertices.concat([t.vertices[0]]),r=e.vertices.concat([e.vertices[0]]),s=!1,c=0;c<n.length-1;c++)for(var a=[n[c],n[c+1]],u=0;u<r.length-1;u++){var h=[r[u],r[u+1]],f=[new o.a(a[0].x,a[0].y),new o.a(a[1].x,a[1].y)],d=[new o.a(h[0].x,h[0].y),new o.a(h[1].x,h[1].y)];if(s=i.a.getIntersection(f,d))return!0}return s},t.prototype.updateOverlappedObject=function(t){for(var e=new Set,n=0;n<t.length;n++)for(var i=t[n],o=0;o<t.length;o++){var r=t[o];n!==o&&this.checkVertexInPoly(i,r)&&e.add(i).add(r),n>o&&this.checkSideIntersection(i,r)&&e.add(i).add(r)}t.forEach(function(t){t.isOverlap=e.has(t)})},t}()},function(t,e,n){"use strict";var i=n(0),o=function(){function t(){}return t.isPointInPoly=function(t,e){for(var n=!1,i=0,o=e.length-1;i<e.length;o=i++){var r=e[i],s=e[o];r.y>t.y!=s.y>t.y&&t.x<(s.x-r.x)*(t.y-r.y)/(s.y-r.y)+r.x&&(n=!n)}return n},t.getIntersection=function(t,e){var n=t[0],o=t[1],r=e[0],s=e[1],c=((n.x*o.y-n.y*o.x)*(r.x-s.x)-(n.x-o.x)*(r.x*s.y-r.y*s.x))/((n.x-o.x)*(r.y-s.y)-(n.y-o.y)*(r.x-s.x)),a=((n.x*o.y-n.y*o.x)*(r.y-s.y)-(n.y-o.y)*(r.x*s.y-r.y*s.x))/((n.x-o.x)*(r.y-s.y)-(n.y-o.y)*(r.x-s.x)),u=new i.a(c,a);return this.isPointInPoly(u,[n,r,o,s])},t}();e.a=o},function(t,e,n){"use strict";var i=n(0),o=function(){function t(){this.cursorDownPos=new i.a(0,0),this.cursorUpPos=new i.a(0,0)}return Object.defineProperty(t,"Instance",{get:function(){return this.instance||(this.instance=new t)},enumerable:!0,configurable:!0}),t.prototype.getOffset=function(){return this.cursorUpPos.substract(this.cursorDownPos)},t}();e.a=o}]);
//# sourceMappingURL=bundle.js.map